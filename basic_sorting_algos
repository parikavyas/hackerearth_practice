def bubble_sort(arr):
    for i in range(len(arr)):
        for j in range(0, len(arr)-1):
            if(arr[j]>arr[j+1]):
                arr[j+1], arr[j] = arr[j], arr[j+1]
    return arr

def selection_sort(arr):
    for i in range(len(arr)):
        mini = i
        for j in range(i+1, len(arr)):
            if arr[j]<arr[mini] : 
                mini = j
        arr[i], arr[mini] = arr[mini], arr[i]
    return arr
            
            
def insertion_sort(arr):
    for i in range(1,len(arr)):
        for j in range(i-1,-1,-1):
            if(arr[j+1]<arr[j]):
                arr[j+1],arr[j] = arr[j], arr[j+1]
    return arr
    
def merge(left, right, arr):
    i = 0
    j = 0
    k = 0
    while(i<len(left) and j<len(right)):
        if(left[i] > right[j]):
            arr[k] = right[j]
            j=j+1
        else:
            arr[k] = left[i]
            i=i+1
        k=k+1
    while(i<len(left)):
        arr[k] = left[i]
        i += 1
        k += 1
    while(j<len(right)):
        arr[k] = right[j]
        j += 1
        k += 1
    return arr
    
def merge_sort(arr):
    if(len(arr)>1):
        mid = int(len(arr)/2)
        left_arr = arr[:mid]
        right_arr = arr[mid:]
        merge_sort(left_arr)
        merge_sort(right_arr)
        arr = merge(left_arr, right_arr, arr)
        print("RETURNED:",arr)

    return arr
    

def partition(arr, start, end):
    pivot = arr[end]
    pindex = start
    for ind in range(start, end):
        if arr[ind] < pivot:
            arr[ind], arr[pindex] = arr[pindex], arr[ind]
            pindex = pindex + 1
    arr[pindex], arr[end] = arr[end], arr[pindex]
    return pindex
            
    
def quick_sort(arr, start, end):
    if(start<end):
        pindex = partition(arr, start, end)
        quick_sort(arr, start, pindex-1)
        quick_sort(arr, pindex+1, end)
    return arr
